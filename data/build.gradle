def globalConfiguration = rootProject.extensions.getByName("ext")
def dataDependencies = rootProject.ext.dataDependencies
def dataTestDependencies = rootProject.ext.dataTestDependencies

apply plugin: 'com.android.library'
apply plugin: dataDependencies.retroLambda

android {

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion");
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion");

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {


    compile project(':domain')

    compile dataDependencies.rxJava
    compile dataDependencies.retrofit
    compile dataDependencies.gsonRetrofit
    compile dataDependencies.rxRetrofit
    compile dataDependencies.gson

    compile dataDependencies.firebaseStorage
    compile dataDependencies.firebaseAuth

    androidTestCompile dataTestDependencies.testingSupportLib
    testCompile dataTestDependencies.junit
    testCompile dataTestDependencies.assertj
    testCompile dataTestDependencies.mockito

}

apply plugin: 'com.google.gms.google-services'
